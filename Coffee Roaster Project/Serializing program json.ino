const size_t bufferSize = 40*JSON_ARRAY_SIZE(0) + JSON_ARRAY_SIZE(1) + 2*JSON_ARRAY_SIZE(3) + 2*JSON_ARRAY_SIZE(4) + JSON_ARRAY_SIZE(5) + 4*JSON_ARRAY_SIZE(8) + 2*JSON_ARRAY_SIZE(10) + JSON_OBJECT_SIZE(8) + JSON_OBJECT_SIZE(105);
DynamicJsonBuffer jsonBuffer(bufferSize);

JsonObject& root = jsonBuffer.createObject();
root["version"] = "1.3.1";
root["revision"] = "1";
root["mode"] = "C";

JsonArray& timeindex = root.createNestedArray("timeindex");
timeindex.add(-1);
timeindex.add(0);
timeindex.add(0);
timeindex.add(0);
timeindex.add(0);
timeindex.add(0);
timeindex.add(0);
timeindex.add(0);

JsonArray& flavors = root.createNestedArray("flavors");
flavors.add(5);
flavors.add(5);
flavors.add(5);
flavors.add(5);
flavors.add(5);
flavors.add(5);
flavors.add(5);
flavors.add(5);
flavors.add(5);
flavors.add(5);

JsonArray& flavorlabels = root.createNestedArray("flavorlabels");
flavorlabels.add("Fragrance/Aroma");
flavorlabels.add("Flavor/Taste");
flavorlabels.add("Aftertaste/Finish");
flavorlabels.add("Acidity/Brightness");
flavorlabels.add("Body/Mouthfeel");
flavorlabels.add("Balance");
flavorlabels.add("Sweetness");
flavorlabels.add("Cleanliness");
flavorlabels.add("Overall/Complexity");
flavorlabels.add("Correction/Other");
root["flavorstartangle"] = 90;
root["flavoraspect"] = 1;
root["title"] = "\\u70d8\\u7119\\u8a18\\u9304\\u5100";
root["beans"] = "";

JsonArray& weight = root.createNestedArray("weight");
weight.add(0);
weight.add(0);
weight.add("g");

JsonArray& volume = root.createNestedArray("volume");
volume.add(0);
volume.add(0);
volume.add("ml");

JsonArray& density = root.createNestedArray("density");
density.add(0);
density.add("g");
density.add(0);
density.add("l");
root["roastertype"] = "Huky 500 (Solid drum)";
root["operator"] = "Joel Spandel";
root["drumspeed"] = "";
root["heavyFC"] = false;
root["lowFC"] = false;
root["lightCut"] = false;
root["darkCut"] = false;
root["drops"] = false;
root["oily"] = false;
root["uneven"] = false;
root["tipping"] = false;
root["scorching"] = false;
root["divots"] = false;
root["whole_color"] = 0;
root["ground_color"] = 0;
root["color_system"] = "";
root["volumeCalcWeightIn"] = "";
root["volumeCalcWeightOut"] = "";
root["roastdate"] = "Mon Aug 13 2018";
root["roastisodate"] = "2018-08-13";
root["roasttime"] = "12:47:01";
root["roastepoch"] = 1534164421;
root["roasttzoffset"] = 0;
root["roastbatchnr"] = 0;
root["roastbatchprefix"] = "";
root["roastbatchpos"] = 1;
root["beansize"] = "0.0";
JsonArray& specialevents = root.createNestedArray("specialevents");
JsonArray& specialeventstype = root.createNestedArray("specialeventstype");
JsonArray& specialeventsvalue = root.createNestedArray("specialeventsvalue");
JsonArray& specialeventsStrings = root.createNestedArray("specialeventsStrings");

JsonArray& etypes = root.createNestedArray("etypes");
etypes.add("Wind");
etypes.add("Drum");
etypes.add("\\u963b\\u5c3c");
etypes.add("Target");
etypes.add("--");
root["roastingnotes"] = "";
root["cuppingnotes"] = "";
JsonArray& timex = root.createNestedArray("timex");
JsonArray& temp1 = root.createNestedArray("temp1");
JsonArray& temp2 = root.createNestedArray("temp2");

JsonArray& phases = root.createNestedArray("phases");
phases.add(93);
phases.add(149);
phases.add(199);
phases.add(232);
root["zmax"] = 35;
root["zmin"] = -5;
root["ymax"] = 250;
root["ymin"] = 0;
root["xmin"] = -60;
root["xmax"] = 939.088;
root["ambientTemp"] = 0;
root["ambient_humidity"] = 0;
root["moisture_greens"] = 0;
root["greens_temp"] = 0;
root["moisture_roasted"] = 0;
JsonArray& extradevices = root.createNestedArray("extradevices");
JsonArray& extraname1 = root.createNestedArray("extraname1");
JsonArray& extraname2 = root.createNestedArray("extraname2");
JsonArray& extratimex = root.createNestedArray("extratimex");
JsonArray& extratemp1 = root.createNestedArray("extratemp1");
JsonArray& extratemp2 = root.createNestedArray("extratemp2");
JsonArray& extramathexpression1 = root.createNestedArray("extramathexpression1");
JsonArray& extramathexpression2 = root.createNestedArray("extramathexpression2");
JsonArray& extradevicecolor1 = root.createNestedArray("extradevicecolor1");
JsonArray& extradevicecolor2 = root.createNestedArray("extradevicecolor2");
JsonArray& extramarkersizes1 = root.createNestedArray("extramarkersizes1");
JsonArray& extramarkersizes2 = root.createNestedArray("extramarkersizes2");
JsonArray& extramarkers1 = root.createNestedArray("extramarkers1");
JsonArray& extramarkers2 = root.createNestedArray("extramarkers2");
JsonArray& extralinewidths1 = root.createNestedArray("extralinewidths1");
JsonArray& extralinewidths2 = root.createNestedArray("extralinewidths2");
JsonArray& extralinestyles1 = root.createNestedArray("extralinestyles1");
JsonArray& extralinestyles2 = root.createNestedArray("extralinestyles2");
JsonArray& extradrawstyles1 = root.createNestedArray("extradrawstyles1");
JsonArray& extradrawstyles2 = root.createNestedArray("extradrawstyles2");
root["externalprogram"] = "";
root["externaloutprogram"] = "";
JsonArray& extraNoneTempHint1 = root.createNestedArray("extraNoneTempHint1");
JsonArray& extraNoneTempHint2 = root.createNestedArray("extraNoneTempHint2");
JsonArray& alarmflag = root.createNestedArray("alarmflag");
JsonArray& alarmguard = root.createNestedArray("alarmguard");
JsonArray& alarmnegguard = root.createNestedArray("alarmnegguard");
JsonArray& alarmtime = root.createNestedArray("alarmtime");
JsonArray& alarmoffset = root.createNestedArray("alarmoffset");
JsonArray& alarmcond = root.createNestedArray("alarmcond");
JsonArray& alarmsource = root.createNestedArray("alarmsource");
JsonArray& alarmtemperature = root.createNestedArray("alarmtemperature");
JsonArray& alarmaction = root.createNestedArray("alarmaction");
JsonArray& alarmbeep = root.createNestedArray("alarmbeep");
JsonArray& alarmstrings = root.createNestedArray("alarmstrings");
root["backgroundpath"] = "C:/Users/Justin/Downloads/2-2016053103214901.alog";
root["samplinginterval"] = null;
root["oversampling"] = true;

JsonArray& svValues = root.createNestedArray("svValues");
svValues.add(0);
svValues.add(0);
svValues.add(0);
svValues.add(0);
svValues.add(0);
svValues.add(0);
svValues.add(0);
svValues.add(0);

JsonArray& svRamps = root.createNestedArray("svRamps");
svRamps.add(0);
svRamps.add(0);
svRamps.add(0);
svRamps.add(0);
svRamps.add(0);
svRamps.add(0);
svRamps.add(0);
svRamps.add(0);

JsonArray& svSoaks = root.createNestedArray("svSoaks");
svSoaks.add(0);
svSoaks.add(0);
svSoaks.add(0);
svSoaks.add(0);
svSoaks.add(0);
svSoaks.add(0);
svSoaks.add(0);
svSoaks.add(0);
JsonArray& devices = root.createNestedArray("devices");
devices.add("MODBUS");

JsonObject& computed = root.createNestedObject("computed");
computed["dryphaseeval"] = "\\u8349\\u9752\\u5473";
computed["midphaseeval"] = "\\u70e4\\u9eb5\\u5305\\u5473";
computed["finishphaseeval"] = "\\u9178";
computed["coolphaseeval"] = "\\u58d3\\u88c2";
computed["volumein"] = 0;
computed["volumeout"] = 0;
computed["weightin"] = 0;
computed["weightout"] = 0;

root.printTo(Serial);
